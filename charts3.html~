<!DOCTYPE html>
<meta charset="utf-8">
<style>

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<div class="chart">
    <h2>Create A Bar Chart With D3 JavaScript</h2>
    <div id="bar-chart">
 
    </div>
</div>
<script>
var chartdata = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120,
    135, 150, 165, 180, 200, 220, 240, 270, 300, 330, 370, 450, 550];

var dd = '{ ' + 
						'"margin"    : [{"top": 30, "right": 10, "bottom": 30, "left": 50}],' + 
						'"dimension" : [{"height": 400, "width": 720, "barWidth": 40, "barOffSet" : 20}]' +
								'}';
								
								
var data = JSON.parse(dd);
 
var height = data.dimension[0].height - data.margin[0].top - data.margin[0].bottom,
    width = data.dimension[0].width - data.margin[0].left - data.margin[0].right,
    barWidth = data.dimension[0].barWidth,
    barOffset = data.dimension[0].barOffSet;
 
var dynamicColor;
 
var yScale = d3.scale.linear()
    .domain([0, d3.max(chartdata)])
    .range([0, height])
 
var xScale = d3.scale.ordinal()
    .domain(d3.range(0, chartdata.length))
    .rangeBands([0, width])
 
var colors = d3.scale.linear()
    .domain([0, chartdata.length * .33, chartdata.length * .66, chartdata.length])
    .range(['#d6e9c6', '#bce8f1', '#faebcc', '#ebccd1'])
 
var awesome = d3.select('#bar-chart').append('svg')
    .attr('width', width + data.margin[0].left + data.margin[0].right)
    .attr('height', height + data.margin[0].top + data.margin[0].bottom)
    .style('background', '#bce8f1')
    .append('g')
    .attr('transform', 'translate(' + data.margin[0].left + ', ' + data.margin[0].top + ')')
    .selectAll('rect').data(chartdata)
    .enter().append('rect')
    .style({
        'fill': function (data, i) {
            return colors(i);
        }, 'stroke': '#31708f', 'stroke-width': '5'
    })
    .attr('width', xScale.rangeBand())
    .attr('x', function (data, i) {
        return xScale(i);
    })
    .attr('height', 0)
    .attr('y', height)
    .on('mouseover', function (data) {
        dynamicColor = this.style.fill;
        d3.select(this)
            .style('fill', '#3c763d')
    })
 
    .on('mouseout', function (data) {
        d3.select(this)
            .style('fill', dynamicColor)
    })
 
awesome.transition()
    .attr('height', function (data) {
        return yScale(data);
    })
    .attr('y', function (data) {
        return height - yScale(data);
    })
    .delay(function (data, i) {
        return i * 20;
    })
    .duration(2000)
    .ease('elastic')
 

drawXaxis();
drawYaxis();

// draws the x-axis
function drawYaxis(){
  var verticalGuideScale = d3.scale.linear()
    .domain([0, d3.max(chartdata)])
    .range([height, 0])
  var vAxis = d3.svg.axis()
    .scale(verticalGuideScale)
    .orient('left')
    .ticks(10)
 
  var verticalGuide = d3.select('svg').append('g')
  vAxis(verticalGuide)
  verticalGuide.attr('transform', 'translate(' + data.margin[0].left + ', ' + data.margin[0].top + ')')
  verticalGuide.selectAll('path')
    .style({fill: 'none', stroke: "#3c763d"})
  verticalGuide.selectAll('line')
    .style({stroke: "#3c763d"})
}

// draws the x-axis
function drawXaxis(){
  var horizontalGuideScale = d3.scale.ordinal()
    .domain(d3.range(0, chartdata.length))
    .rangeBands([0, width])
	var hAxis = d3.svg.axis()
    .scale(horizontalGuideScale)
    .orient('bottom')
    .ticks(chartdata.size) 
	var horizontalGuide = d3.select('svg').append('g')
	hAxis(horizontalGuide)
	horizontalGuide.attr('transform', 'translate(' + data.margin[0].left + ', ' + (height + data.margin[0].top) + ')')
	horizontalGuide.selectAll('path')
    .style({fill: 'none', stroke: "#3c763d"})
	horizontalGuide.selectAll('line')
    .style({stroke: "#3c763d"});
}


</script>
</br>


</body>
</html>
